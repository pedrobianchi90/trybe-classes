{"ast":null,"code":"var _jsxFileName = \"/Users/pedrobianchi/Trybe/trybe-classes/front-end/Bloco-11-Componentes-com-Estado-Eventos-e-Formularios-com-React/11.2-Eventos-e-Formularios-no-React/aula-11.2/src/Form.jsx\";\nimport React, { Component } from 'react';\nimport DataFieldset from './DataFieldset';\nimport PersonalFieldset from './PersonalFieldset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      age: '',\n      anecdote: '',\n      terms: false,\n      formularioComErros: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleError() {\n    const {\n      name,\n      email,\n      age,\n      anecdote,\n      terms\n    } = this.state;\n    const errorCases = [!name.length, !email.match(/^\\S+@\\S+$/i), !age.length, !anecdote.length, !terms];\n    const formularioPreenchido = errorCases.every(error => error !== true);\n    this.setState({\n      formularioComErros: !formularioPreenchido\n    });\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name\n    } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    }, () => {\n      this.handleError();\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      age,\n      anecdote,\n      terms,\n      formularioComErros\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Estados e React - Tecnologia fant\\xE1stica ou reagindo a regionalismos?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(PersonalFieldset, {\n          nameValue: name,\n          emailValue: email,\n          ageValue: age,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DataFieldset, {\n          anecdoteValue: anecdote,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"terms\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"terms\",\n            type: \"checkbox\",\n            name: \"terms\",\n            onChange: this.handleChange,\n            value: terms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), \"Concordo com termos e acordos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), formularioComErros ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Preencha todos os campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: \"Todos campos foram preenchidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/pedrobianchi/Trybe/trybe-classes/front-end/Bloco-11-Componentes-com-Estado-Eventos-e-Formularios-com-React/11.2-Eventos-e-Formularios-no-React/aula-11.2/src/Form.jsx"],"names":["React","Component","DataFieldset","PersonalFieldset","Form","constructor","state","name","email","age","anecdote","terms","formularioComErros","handleChange","bind","handleError","errorCases","length","match","formularioPreenchido","every","error","setState","target","value","type","checked","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DataFieldset from './DataFieldset';\nimport PersonalFieldset from './PersonalFieldset';\n\nclass Form extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: '',\n            email: '',\n            age: '',\n            anecdote: '',\n            terms: false,\n            formularioComErros: true,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleError() {\n        const { name, email, age, anecdote, terms } = this.state;\n\n        const errorCases = [\n            !name.length,\n            !email.match(/^\\S+@\\S+$/i),\n            !age.length,\n            !anecdote.length,\n            !terms,\n        ];\n\n        const formularioPreenchido = errorCases.every((error) => error !== true);\n\n        this.setState({\n            formularioComErros: !formularioPreenchido,\n        });\n    }\n\n    handleChange({ target }) {\n        const { name } = target;\n        const value = (target.type === 'checkbox') ? target.checked : target.value;\n        this.setState({\n            [name]: value,\n        }, () => { this.handleError(); });\n    }\n\n    render() {\n        const { name, email, age, anecdote, terms, formularioComErros } = this.state;\n\n        return (\n            <div>\n                <h1>Estados e React - Tecnologia fant√°stica ou reagindo a regionalismos?</h1>\n                <form className=\"form\">\n                    <PersonalFieldset\n                        nameValue={name}\n                        emailValue={email}\n                        ageValue={age}\n                        handleChange={this.handleChange}\n                    />\n\n                    <DataFieldset anecdoteValue={anecdote} handleChange={this.handleChange} />\n\n                    <label htmlFor=\"terms\">\n                        <input\n                            id=\"terms\"\n                            type=\"checkbox\"\n                            name=\"terms\"\n                            onChange={this.handleChange}\n                            value={terms}\n                        />\n                        Concordo com termos e acordos\n                    </label>\n                </form>\n                {formularioComErros\n                    ? <span style={{ color: 'red' }}>Preencha todos os campos</span>\n                    : <span style={{ color: 'green' }}>Todos campos foram preenchidos</span>}\n            </div>\n        );\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}